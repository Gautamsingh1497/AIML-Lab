# Import the libraries
import math
import numpy as np
import scipy.stats as stats

# Math library functions
print("Math Library:")
print("1. Square root of 16:", math.sqrt(16))
print("2. Logarithm of 10 (base 2):", math.log(10, 2))
print("3. Sine of 30 degrees:", math.sin(math.radians(30)))
print("4. Exponential of 2:", math.exp(2))
print("5. Absolute value of -5:", math.fabs(-5))
print("6. Ceiling of 4.3:", math.ceil(4.3))
print("7. Floor of 4.7:", math.floor(4.7))
print("8. Power of 2^3:", math.pow(2, 3))
print("9. Greatest common divisor of 36 and 48:", math.gcd(36, 48))
print("10. Factorial of 5:", math.factorial(5))
print("11. Pi constant:", math.pi)
print("12. Euler's constant:", math.e)
print("13. Hyperbolic sine of 2:", math.sinh(2))
print("14. Hyperbolic cosine of 2:", math.cosh(2))
print("15. Trigonometric tangent of 45 degrees:", math.tan(math.radians(45)))

# NumPy library function
print("\nNumPy Library:")
array1 = np.array([1, 2, 3, 4, 5])
array2 = np.array([6, 7, 8, 9, 10])
array3 = np.array([1, 2, 3])
array4 = np.array([6, 7, 8])
print("1. Sum of two arrays:", np.add(array1, array2))
print("2. Element-wise multiplication of two arrays:", np.multiply(array1, array2))
print("3. Dot product of two arrays:", np.dot(array1, array2))
print("4. Mean of an array:", np.mean(array1))
print("5. Standard deviation of an array:", np.std(array1))
print("6. Maximum element in an array:", np.max(array1))
print("7. Minimum element in an array:", np.min(array1))
print("8. Transpose of an array:")
print(np.transpose(array1))
print("9. Reshaping an array:")
print(np.reshape(array1, (5, 1)))
print("10. Sorting an array:",np.sort(array1))
print("11. Exponential of an array:")
print(np.exp(array1))
print("12. Natural logarithm of an array:")
print(np.log(array1))
print("13. Sine of an array:")
print(np.sin(array1))
print("14. Concatenating two arrays:")
print(np.concatenate((array1, array2)))
print("15. Cross product of two arrays:",np.cross(array3, array4))

# SciPy library functions
print("\nSciPy Library:")
data = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]
print("1. Mode of a dataset:", stats.mode(data, keepdims=True))
print("2. Normal probability density function for mean 0 and standard deviation 1:",stats.norm.pdf(0, loc=0, scale=1))
print("3. Chi-squared probability density function for degrees of freedom 2:",stats.chi2.pdf(2, df=2))
print("4. Pearson correlation coefficient between two arrays:")
print(stats.pearsonr(array1, array2))
print("5. T-test for two independent samples:")
sample1 = [1, 2, 3, 4, 5]
sample2 = [6, 7, 8, 9, 10]
print(stats.ttest_ind(sample1, sample2))
print("6. Poisson probability mass function for lambda 2 and k 3:",stats.poisson.pmf(3, mu=2))
print("7. Exponential cumulative distribution function for scale 1:",stats.expon.cdf(1, scale=1))
print("8. F-distribution probability density function for degrees of freedom (3, 4):")
print(stats.f.pdf(2.0, 3, 4))
print("9. Chi-squared test for independence in a contingency table:")
contingency_table = np.array([[10, 20], [30, 40]])
print(stats.chi2_contingency(contingency_table))
print("10. Fisher exact test for a 2x2 contingency table:")
contingency_table_2x2 = np.array([[10, 20], [30, 40]])
print(stats.fisher_exact(contingency_table_2x2))
print("11. Wilcoxon signed-rank test for paired samples:")
sample3 = [1, 2, 2, 3, 4]
sample4 = [2, 3, 4, 5, 6]
print(stats.wilcoxon(sample3, sample4))
print("12. Shapiro-Wilk test for normality:")
normal_data = np.random.normal(0, 1, 100)
print(stats.shapiro(normal_data))
print("13. Kolmogorov-Smirnov test for goodness of fit:")
sample5 = np.random.normal(0, 1, 100)
print(stats.kstest(sample5, 'norm'))
print("14. Mann-Whitney U test for two independent samples:")
sample6 = [1, 2, 3, 4, 5]
sample7 = [6, 7, 8, 9, 10]
print(stats.mannwhitneyu(sample6, sample7))
print("15. Linear regression and R-squared value:")
x = np.array([1, 2, 3, 4, 5])
y = np.array([2, 4, 5, 4, 5])
slope, intercept, r_value, p_value, std_err = stats.linregress(x, y)
print("Slope:", slope)
print("Intercept:", intercept)
print("R-squared:", r_value**2)
